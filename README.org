#+TITLE: Tetris
#+AUTHOR: Marcus Veibäck
#+EMAIL: sirmar@gmail

* Introduction
Yes, this is yet another Tetris implementation. The main point for me, however,
is not to produce a game experience, but something completely different. This
is my primary goals, in no particular order of importance:

- Learn to better use TDD from scratch in a project.
- Learn how to properly package a python program.
- Learn more on how to plan and define user stories.
- Learn more about Emacs Org mode.
- Learn small useful things like Nose, Nose coverage and PyYaml.

If you find anything in this project useful. Please go ahead and use
it freely.

--- Marcus Veibäck ([[mailto:sirmar@gmail.com][sirmar@gmail.com]])

* Principles
When coding, I do my best to follow some principles that I regard as
best practices to perform well as a programmer.

** Dependency injection
Every class should have its dependencies explicitly expressed. In this
context, it means that required dependencies for a class should be
passed into the constructor. No globals, no globally accessible singletons
and no more puzzling questions about what a class needs in order to be
instantiated and working.

This also means that unit testing will be much easier and that
instantiation will be pushed to one clear place at application
start-up.

There is one exception to this rule: Immutable value objects need not be
injected.

** Test Driven Development
Writing tests first makes it easier to focus on a little piece of
functionality, it will influence the design to be testable and it
enables continuous safe refactoring.

Speaking of testing. One does not test implementation, one tests
functionality.

** Single responsibility principle
One class, one responsibility. One method, one responsibility. That is,
abstractions like classes and functions should focus their work as
much as possible. They should perform one task, and be named after that
intent.

** Wrap external dependencies
Building a layer between the application and its external decencies
enables the creation of a application specific language against that
dependency. Also, it makes for easier mocking when testing and less job
switching that dependency if it needs to be done.

** Thoughtful naming
Good naming is important. The reasons are many:
- It makes the code easier to understand.
- The process of naming makes the developer think clearer about his code.
- Developers read code more than they write code.

Intent revealing names are better than implementation describing ones.
Short names are better than long ones, but long names wins if they improve
readability. Do not be afraid to extract small methods and classes in
order to be able to name the intent.

Also, the given-when-then structure is a good way to write easy to
understand tests.

* Dependencies
If you are an org-mode user, just tangle this file to create the
installation shell script to install external dependencies not covered
by pip. Otherwise just run the below lines in your shell.

** Pygame
Tetris is built on pygame.

#+BEGIN_SRC sh :tangle install_pygame.sh :shebang "#!/bin/bash"
  brew install sdl sdl_image sdl_mixer sdl_ttf portmidi
  brew install hg
  pip install hg+http://bitbucket.org/pygame/pygame
  brew install Caskroom/cask/xquartz
#+END_SRC

* Backlog
** Epics [10/50]
*** Planning [1/5]
"As a developer I need to plan my work to do the right thing in the right order."
**** DONE Create Epics with slogans.
CLOSED: [2015-02-04 Wed 22:22]
**** DOING Create Backlog items with slogans.
**** TODO Prioritize Backlog items.
**** TODO Define acceptance criteria for some backlog items to get started.
**** TODO Define acceptance criteria for all backlog items.
*** DONE Development Environment [6/6]
CLOSED: [2015-02-08 Sun 15:13]
"As a developer I want a good environment to work in to be efficient."
**** DONE Git repository
CLOSED: [2015-02-04 Wed 21:06]
"As a developer I need a git repository i order to version handle
my project."
**** DONE Project Structure
CLOSED: [2015-02-05 Thu 20:20]
"As a developer I want to use a good project structure so that I
can share my work."

**** DONE Test Framework
CLOSED: [2015-02-05 Thu 20:21]
"As a developer I want a test framework to be able to test my application."

**** DONE Test Coverage
CLOSED: [2015-02-05 Thu 20:43]
"As a developer I want to measure test coverage so that I can see my level
of testing."

**** DONE PyGame
CLOSED: [2015-02-05 Thu 21:45]
"As a developer I need to install Pygame to get an API for game creation."

**** DONE Configure Pylint
CLOSED: [2015-02-08 Sun 15:13]
"As a developer I need to configure Pylint so that I get a good help
when coding python."

*** TODO Menu System [2/5]
"As a Player I need a menu system to be able to configure and start a game."

**** DONE Open Window
CLOSED: [2015-02-08 Sun 15:13]
"As a player I need a window to be able to see the game."

Acceptance criteria:
- An empty window of 640x480 pixels should be opened.

**** DONE Exit
CLOSED: [2015-02-11 Wed 19:27]
"As a player I want to exit the game in order to do other things."

Acceptance criteria:
- An exit menu item should appear when starting the game.
- Information that escape key will trigger exit should be seen.
- When the escape key is pressed the program should exit.

**** DOING Start Game
"As a player I want a start game option so that I can start playing"

Acceptance criteria:
- The menu should have a grey background panel
- A yellow main menu header should be seen.
- A white start game option with an assigned key should be seen.
- Nothing need to happen when pressing key assigned key.

**** TODO Configure Player Name
**** TODO Configure Keys
*** TODO Game Board [0/4]
"As a Player I need a game board to provide context and
aesthetics to my experience"
**** TODO Reach Game Board
**** TODO Background
**** TODO The Well
**** TODO Frames
*** TODO Pieces [0/8]
"As a Player I need different pieces to be able to fill the well."
**** TODO The I Piece
**** TODO The O Piece
**** TODO The L Piece
**** TODO The J Piece
**** TODO The S Piece
**** TODO The Z Piece
**** TODO Piece Colors
**** TODO Random Piece
*** TODO Movement [0/5]
"As a player I want to move the pieces in order to build well."
**** TODO Sideways
**** TODO Instant Down
**** TODO Rotate
**** TODO Fast Down
**** TODO Gravity
*** TODO Rules [0/3]
"As a player I need game rules to have fun."
**** TODO Remove Full Rows
**** TODO Increase Gravity
**** TODO Game Over
*** TODO Extra Game Information [0/3]
"As a player I want more in game data to add to my experience."
**** TODO Next Piece
**** TODO Score Board
**** TODO High Score
*** TODO More Players [0/0]
"As a player I want to play together with others to have more fun."
*** TODO Animations [0/0]
"As a player I want animation so that the game looks prettier."
*** TODO Sound Effects [0/0]
"As a player I want sound to make the game cooler."
*** TODO Create Package [0/0]
"As a player I want a package in order to install the game easier."
** Bugs [0/0]
